/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type {
  Interface,
  FunctionFragment,
  DecodedValue,
  Contract,
  ContractCall,
  ContractCallOptions,
  Overrides,
  BigNumberish,
  BytesLike,
  CallResult,
  ScriptTransactionRequest,
  TransactionResult,
} from "fuels";

export type RawVecInput = { ptr: BigNumberish; cap: BigNumberish };

export type RawVecOutput = { ptr: bigint; cap: bigint };

export type VecInput = { buf: RawVecInput; len: BigNumberish };

export type VecOutput = { buf: RawVecOutput; len: bigint };

export type test_structInput = { v1: VecInput; v2: VecInput };

export type test_structOutput = { v1: VecOutput; v2: VecOutput };

interface TestContractAbiInterface extends Interface {
  functions: {
    test_function: FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "test_function",
    values?: undefined
  ): Uint8Array;

  decodeFunctionData(
    functionFragment: "test_function",
    data: BytesLike
  ): DecodedValue;
}

export class TestContractAbi extends Contract {
  interface: TestContractAbiInterface;
  prepareCall: {
    test_function(options?: ContractCallOptions): ContractCall;
  };
  submit: {
    test_function(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<test_structOutput>;
  };
  submitResult: {
    test_function(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<TransactionResult<any>>;
  };
  dryRun: {
    test_function(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<test_structOutput>;
  };
  dryRunResult: {
    test_function(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<CallResult>;
  };
  simulate: {
    test_function(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<test_structOutput>;
  };
  simulateResult: {
    test_function(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<CallResult>;
  };

  test_function(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<test_structOutput>;
}
