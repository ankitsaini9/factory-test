var g=Object.defineProperty;var A=Object.getOwnPropertyDescriptor;var q=Object.getOwnPropertyNames,P=Object.getOwnPropertySymbols;var B=Object.prototype.hasOwnProperty,E=Object.prototype.propertyIsEnumerable;var x=(n,r,e)=>r in n?g(n,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[r]=e,R=(n,r)=>{for(var e in r||(r={}))B.call(r,e)&&x(n,e,r[e]);if(P)for(var e of P(r))E.call(r,e)&&x(n,e,r[e]);return n};var F=(n,r)=>()=>(n&&(r=n(n=0)),r);var I=(n,r)=>{for(var e in r)g(n,e,{get:r[e],enumerable:!0})},z=(n,r,e,t)=>{if(r&&typeof r=="object"||typeof r=="function")for(let s of q(r))!B.call(n,s)&&s!==e&&g(n,s,{get:()=>r[s],enumerable:!(t=A(r,s))||t.enumerable});return n};var D=n=>z(g({},"__esModule",{value:!0}),n);var o=F(()=>{});var H={};I(H,{generateTestWallet:()=>O,seedWallet:()=>L});module.exports=D(H);o();o();o();o();o();var M=require("@ethersproject/bytes");o();var h,S="Node";typeof globalThis<"u"&&globalThis.crypto&&(h=globalThis.crypto,S="Web");if(!h&&typeof require=="function")try{h=require("crypto"),S="Node"}catch(n){console.error("keystore expects a standard Web browser or Node environment.",n)}var m=h,T=S;o();var y=n=>T==="Node"?m.randomBytes(n):m.getRandomValues(new Uint8Array(n));o();var b=require("@fuel-ts/providers");o();var l=require("@fuel-ts/constants"),w=require("@fuel-ts/hasher"),v=require("@fuel-ts/hdwallet"),k=require("@fuel-ts/interfaces"),K=require("@fuel-ts/mnemonic"),a=require("@fuel-ts/providers"),C=require("@fuel-ts/signer"),J="http://127.0.0.1:4000/graphql",u=class extends k.AbstractWallet{constructor(e,t=J){super();let s=new C.Signer(e);this.signer=()=>s,this.provider=this.connect(t)}get address(){return this.signer().address}get privateKey(){return this.signer().privateKey}get publicKey(){return this.signer().publicKey}connect(e){if(e)typeof e=="string"?this.provider=new a.Provider(e):this.provider=e;else throw new Error("Provider is required");return this.provider}signMessage(e){return this.signer().sign((0,w.hashMessage)(e))}signTransaction(e){let t=(0,a.transactionRequestify)(e),s=(0,w.hashTransaction)(t);return this.signer().sign(s)}populateTransactionWitnessesSignature(e){let t=(0,a.transactionRequestify)(e),s=t.getCoinInputWitnessIndexByOwner(this.address);if(typeof s=="number"){let i=this.signTransaction(t);t.updateWitness(s,i)}return t}async getCoinsToSpend(e){return this.provider.getCoinsToSpend(this.address,e)}async getCoins(){let e=[],s;for(;;){let i=await this.provider.getCoins(this.address,void 0,{first:9999,after:s});if(e.push(...i),!(i.length>=9999))break;throw new Error(`Wallets with more than ${9999} coins are not yet supported`)}return e}async getBalance(e=l.NativeAssetId){return await this.provider.getBalance(this.address,e)}async getBalances(){let e=[],s;for(;;){let i=await this.provider.getBalances(this.address,{first:9999,after:s});if(e.push(...i),!(i.length>=9999))break;throw new Error(`Wallets with more than ${9999} balances are not yet supported`)}return e}async fund(e){let t=e.calculateFee(),s=await this.getCoinsToSpend([[t,l.NativeAssetId]]);e.addCoins(s)}async transfer(e,t,s=l.NativeAssetId,i={}){let f=R({gasLimit:1e4},i),c=new a.ScriptTransactionRequest(f);c.addCoinOutput(e,t,s);let N=c.calculateFee(),U=await this.getCoinsToSpend([[t,s],[N,l.NativeAssetId]]);return c.addCoins(U),this.sendTransaction(c)}async sendTransaction(e){let t=(0,a.transactionRequestify)(e);return this.provider.sendTransaction(this.populateTransactionWitnessesSignature(t))}async simulateTransaction(e){let t=(0,a.transactionRequestify)(e);return this.provider.call(this.populateTransactionWitnessesSignature(t),{utxoValidation:!0})}static generate(e){let t=C.Signer.generatePrivateKey(e==null?void 0:e.entropy);return new u(t,e==null?void 0:e.provider)}static fromSeed(e,t){let i=v.HDWallet.fromSeed(e).derivePath(t||u.defaultPath);return new u(i.privateKey)}static fromMnemonic(e,t,s){let i=K.Mnemonic.mnemonicToSeed(e,s),c=v.HDWallet.fromSeed(i).derivePath(t||u.defaultPath);return new u(c.privateKey)}static fromExtendedKey(e){let t=v.HDWallet.fromExtendedKey(e);return new u(t.privateKey)}},d=u;d.defaultPath="m/44'/1179993420'/0'/0/0";var L=async(n,r)=>{let e=new d(process.env.GENESIS_SECRET||y(32),n.provider),t=await e.getCoinsToSpend(r),s=new b.ScriptTransactionRequest({gasLimit:1e4});s.addCoins(t),r.map(b.coinQuantityfy).forEach(({amount:f,assetId:c})=>s.addCoinOutput(n.address,f,c)),await(await e.sendTransaction(s)).wait()},O=async(n,r)=>{let e=d.generate({provider:n});return r&&await L(e,r),e};0&&(module.exports={generateTestWallet,seedWallet});
//# sourceMappingURL=test-utils.js.map