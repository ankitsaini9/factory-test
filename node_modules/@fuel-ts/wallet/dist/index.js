var g=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var F=Object.getOwnPropertyNames,P=Object.getOwnPropertySymbols;var R=Object.prototype.hasOwnProperty,I=Object.prototype.propertyIsEnumerable;var B=(n,r,e)=>r in n?g(n,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):n[r]=e,W=(n,r)=>{for(var e in r||(r={}))R.call(r,e)&&B(n,e,r[e]);if(P)for(var e of P(r))I.call(r,e)&&B(n,e,r[e]);return n};var z=(n,r)=>()=>(n&&(r=n(n=0)),r);var k=(n,r)=>{for(var e in r)g(n,e,{get:r[e],enumerable:!0})},D=(n,r,e,t)=>{if(r&&typeof r=="object"||typeof r=="function")for(let s of F(r))!R.call(n,s)&&s!==e&&g(n,s,{get:()=>r[s],enumerable:!(t=E(r,s))||t.enumerable});return n};var M=n=>D(g({},"__esModule",{value:!0}),n);var o=z(()=>{});var V={};k(V,{TestUtils:()=>x,Wallet:()=>c});module.exports=M(V);o();o();var m=require("@fuel-ts/constants"),T=require("@fuel-ts/hasher"),h=require("@fuel-ts/hdwallet"),K=require("@fuel-ts/interfaces"),L=require("@fuel-ts/mnemonic"),a=require("@fuel-ts/providers"),S=require("@fuel-ts/signer"),Q="http://127.0.0.1:4000/graphql",d=class extends K.AbstractWallet{constructor(e,t=Q){super();let s=new S.Signer(e);this.signer=()=>s,this.provider=this.connect(t)}get address(){return this.signer().address}get privateKey(){return this.signer().privateKey}get publicKey(){return this.signer().publicKey}connect(e){if(e)typeof e=="string"?this.provider=new a.Provider(e):this.provider=e;else throw new Error("Provider is required");return this.provider}signMessage(e){return this.signer().sign((0,T.hashMessage)(e))}signTransaction(e){let t=(0,a.transactionRequestify)(e),s=(0,T.hashTransaction)(t);return this.signer().sign(s)}populateTransactionWitnessesSignature(e){let t=(0,a.transactionRequestify)(e),s=t.getCoinInputWitnessIndexByOwner(this.address);if(typeof s=="number"){let i=this.signTransaction(t);t.updateWitness(s,i)}return t}async getCoinsToSpend(e){return this.provider.getCoinsToSpend(this.address,e)}async getCoins(){let e=[],s;for(;;){let i=await this.provider.getCoins(this.address,void 0,{first:9999,after:s});if(e.push(...i),!(i.length>=9999))break;throw new Error(`Wallets with more than ${9999} coins are not yet supported`)}return e}async getBalance(e=m.NativeAssetId){return await this.provider.getBalance(this.address,e)}async getBalances(){let e=[],s;for(;;){let i=await this.provider.getBalances(this.address,{first:9999,after:s});if(e.push(...i),!(i.length>=9999))break;throw new Error(`Wallets with more than ${9999} balances are not yet supported`)}return e}async fund(e){let t=e.calculateFee(),s=await this.getCoinsToSpend([[t,m.NativeAssetId]]);e.addCoins(s)}async transfer(e,t,s=m.NativeAssetId,i={}){let f=W({gasLimit:1e4},i),u=new a.ScriptTransactionRequest(f);u.addCoinOutput(e,t,s);let A=u.calculateFee(),q=await this.getCoinsToSpend([[t,s],[A,m.NativeAssetId]]);return u.addCoins(q),this.sendTransaction(u)}async sendTransaction(e){let t=(0,a.transactionRequestify)(e);return this.provider.sendTransaction(this.populateTransactionWitnessesSignature(t))}async simulateTransaction(e){let t=(0,a.transactionRequestify)(e);return this.provider.call(this.populateTransactionWitnessesSignature(t),{utxoValidation:!0})}static generate(e){let t=S.Signer.generatePrivateKey(e==null?void 0:e.entropy);return new d(t,e==null?void 0:e.provider)}static fromSeed(e,t){let i=h.HDWallet.fromSeed(e).derivePath(t||d.defaultPath);return new d(i.privateKey)}static fromMnemonic(e,t,s){let i=L.Mnemonic.mnemonicToSeed(e,s),u=h.HDWallet.fromSeed(i).derivePath(t||d.defaultPath);return new d(u.privateKey)}static fromExtendedKey(e){let t=h.HDWallet.fromExtendedKey(e);return new d(t.privateKey)}},c=d;c.defaultPath="m/44'/1179993420'/0'/0/0";var x={};k(x,{generateTestWallet:()=>H,seedWallet:()=>U});o();o();o();o();o();var G=require("@ethersproject/bytes");o();var v,C="Node";typeof globalThis<"u"&&globalThis.crypto&&(v=globalThis.crypto,C="Web");if(!v&&typeof require=="function")try{v=require("crypto"),C="Node"}catch(n){console.error("keystore expects a standard Web browser or Node environment.",n)}var y=v,w=C;o();var l=n=>w==="Node"?y.randomBytes(n):y.getRandomValues(new Uint8Array(n));o();var b=require("@fuel-ts/providers");var U=async(n,r)=>{let e=new c(process.env.GENESIS_SECRET||l(32),n.provider),t=await e.getCoinsToSpend(r),s=new b.ScriptTransactionRequest({gasLimit:1e4});s.addCoins(t),r.map(b.coinQuantityfy).forEach(({amount:f,assetId:u})=>s.addCoinOutput(n.address,f,u)),await(await e.sendTransaction(s)).wait()},H=async(n,r)=>{let e=c.generate({provider:n});return r&&await U(e,r),e};0&&(module.exports={TestUtils,Wallet});
//# sourceMappingURL=index.js.map