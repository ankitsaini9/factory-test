var xt=Object.create;var B=Object.defineProperty,Tt=Object.defineProperties,Ct=Object.getOwnPropertyDescriptor,Gt=Object.getOwnPropertyDescriptors,ft=Object.getOwnPropertyNames,$=Object.getOwnPropertySymbols,ht=Object.getPrototypeOf,z=Object.prototype.hasOwnProperty,nt=Object.prototype.propertyIsEnumerable;var rt=(r,e,t)=>e in r?B(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,s=(r,e)=>{for(var t in e||(e={}))z.call(e,t)&&rt(r,t,e[t]);if($)for(var t of $(e))nt.call(e,t)&&rt(r,t,e[t]);return r},p=(r,e)=>Tt(r,Gt(e));var J=(r,e)=>{var t={};for(var a in r)z.call(r,a)&&e.indexOf(a)<0&&(t[a]=r[a]);if(r!=null&&$)for(var a of $(r))e.indexOf(a)<0&&nt.call(r,a)&&(t[a]=r[a]);return t};var Rt=(r,e)=>{for(var t in e)B(r,t,{get:e[t],enumerable:!0})},E=(r,e,t,a)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of ft(e))!z.call(r,n)&&n!==t&&B(r,n,{get:()=>e[n],enumerable:!(a=Ct(e,n))||a.enumerable});return r},I=(r,e,t)=>(E(r,e,"default"),t&&E(t,e,"default")),Bt=(r,e,t)=>(t=r!=null?xt(ht(r)):{},E(e||!r||!r.__esModule?B(t,"default",{value:r,enumerable:!0}):t,r)),_t=r=>E(B({},"__esModule",{value:!0}),r);var kt=(r,e,t)=>{if(!e.has(r))throw TypeError("Cannot "+t)};var st=(r,e,t)=>{if(e.has(r))throw TypeError("Cannot add the same private member more than once");e instanceof WeakSet?e.add(r):e.set(r,t)};var ot=(r,e,t)=>(kt(r,e,"access private method"),t);var S={};Rt(S,{ChangeOutputCollisionError:()=>N,CoinStatus:()=>Y,CreateTransactionRequest:()=>D,NoWitnessAtIndexError:()=>W,NoWitnessByOwnerError:()=>H,Provider:()=>L,ScriptTransactionRequest:()=>Q,TransactionResponse:()=>O,TransactionType:()=>c.TransactionType,coinQuantityfy:()=>_,getSignableTransaction:()=>qt,getTransactionId:()=>te,inputify:()=>tt,outputify:()=>et,returnZeroScript:()=>at,transactionRequestify:()=>K});module.exports=_t(S);I(S,require("@fuel-ts/transactions"),module.exports);var it=require("@ethersproject/bytes"),X=require("@fuel-ts/constants"),_=r=>{var a,n;let e,t;return Array.isArray(r)?(t=r[0],e=(a=r[1])!=null?a:X.NativeAssetId):(t=r.amount,e=(n=r.assetId)!=null?n:X.NativeAssetId),{assetId:(0,it.hexlify)(e),amount:BigInt(t)}};var u=Bt(require("graphql-tag")),Y=(t=>(t.Spent="SPENT",t.Unspent="UNSPENT",t))(Y||{});var k=u.default`
  fragment transactionFragment on Transaction {
    id
    rawPayload
    status {
      type: __typename
      ... on SubmittedStatus {
        time
      }
      ... on SuccessStatus {
        block {
          id
        }
        time
        programState {
          returnType
          data
        }
      }
      ... on FailureStatus {
        block {
          id
        }
        time
        reason
      }
    }
  }
`,ct=u.default`
  fragment receiptFragment on Receipt {
    data
    rawPayload
  }
`,U=u.default`
  fragment blockFragment on Block {
    id
    height
    producer
    transactions {
      id
    }
    time
  }
`,j=u.default`
  fragment coinFragment on Coin {
    utxoId
    owner
    amount
    assetId
    maturity
    status
    blockCreated
  }
`,ut=u.default`
  fragment balanceFragment on Balance {
    owner
    amount
    assetId
  }
`,wt=u.default`
  query getVersion {
    nodeInfo {
      nodeVersion
    }
  }
`,Mt=u.default`
  query getChain {
    chain {
      name
      latestBlock {
        ...blockFragment
      }
      baseChainHeight
      peerCount
    }
  }
  ${U}
`,At=u.default`
  query getTransaction($transactionId: TransactionId!) {
    transaction(id: $transactionId) {
      ...transactionFragment
    }
  }
  ${k}
`,Qt=u.default`
  query getTransactionWithReceipts($transactionId: TransactionId!) {
    transaction(id: $transactionId) {
      ...transactionFragment
      receipts {
        ...receiptFragment
      }
    }
  }
  ${k}
  ${ct}
`,Dt=u.default`
  query getTransactions($after: String, $before: String, $first: Int, $last: Int) {
    transactions(after: $after, before: $before, first: $first, last: $last) {
      edges {
        node {
          ...transactionFragment
        }
      }
    }
  }
  ${k}
`,Pt=u.default`
  query getTransactionsByOwner(
    $owner: Address!
    $after: String
    $before: String
    $first: Int
    $last: Int
  ) {
    transactionsByOwner(owner: $owner, after: $after, before: $before, first: $first, last: $last) {
      edges {
        node {
          ...transactionFragment
        }
      }
    }
  }
  ${k}
`,Ot=u.default`
  query getBlock($blockId: BlockId, $blockHeight: U64) {
    block(id: $blockId, height: $blockHeight) {
      ...blockFragment
    }
  }
  ${U}
`,Lt=u.default`
  query getBlockWithTransactions($blockId: BlockId, $blockHeight: U64) {
    block(id: $blockId, height: $blockHeight) {
      ...blockFragment
      transactions {
        ...transactionFragment
      }
    }
  }
  ${U}
  ${k}
`,$t=u.default`
  query getBlocks($after: String, $before: String, $first: Int, $last: Int) {
    blocks(after: $after, before: $before, first: $first, last: $last) {
      edges {
        node {
          ...blockFragment
        }
      }
    }
  }
  ${U}
`,Et=u.default`
  query getCoin($coinId: UtxoId!) {
    coin(utxoId: $coinId) {
      ...coinFragment
    }
  }
  ${j}
`,Ut=u.default`
  query getCoins(
    $filter: CoinFilterInput!
    $after: String
    $before: String
    $first: Int
    $last: Int
  ) {
    coins(filter: $filter, after: $after, before: $before, first: $first, last: $last) {
      edges {
        node {
          ...coinFragment
        }
      }
    }
  }
  ${j}
`,Ft=u.default`
  query getCoinsToSpend(
    $owner: Address!
    $spendQuery: [SpendQueryElementInput!]!
    $maxInputs: Int
  ) {
    coinsToSpend(owner: $owner, spendQuery: $spendQuery, maxInputs: $maxInputs) {
      ...coinFragment
    }
  }
  ${j}
`,Vt=u.default`
  query getContract($contractId: ContractId!) {
    contract(id: $contractId) {
      bytecode
      id
    }
  }
`,Nt=u.default`
  query getBalance($owner: Address!, $assetId: AssetId!) {
    balance(owner: $owner, assetId: $assetId) {
      ...balanceFragment
    }
  }
  ${ut}
`,Wt=u.default`
  query getBalances(
    $filter: BalanceFilterInput!
    $after: String
    $before: String
    $first: Int
    $last: Int
  ) {
    balances(filter: $filter, after: $after, before: $before, first: $first, last: $last) {
      edges {
        node {
          ...balanceFragment
        }
      }
    }
  }
  ${ut}
`,Ht=u.default`
  mutation dryRun($encodedTransaction: HexString!, $utxoValidation: Boolean) {
    dryRun(tx: $encodedTransaction, utxoValidation: $utxoValidation) {
      ...receiptFragment
    }
  }
  ${ct}
`,vt=u.default`
  mutation submit($encodedTransaction: HexString!) {
    submit(tx: $encodedTransaction) {
      id
    }
  }
`,Kt=u.default`
  mutation startSession {
    startSession
  }
`,Zt=u.default`
  mutation endSession($sessionId: ID!) {
    endSession(id: $sessionId)
  }
`,zt=u.default`
  mutation execute($sessionId: ID!, $op: String!) {
    execute(id: $sessionId, op: $op)
  }
`,Jt=u.default`
  mutation reset($sessionId: ID!) {
    reset(id: $sessionId)
  }
`,Xt=(r,e,t)=>r();function pt(r,e=Xt){return{getVersion(t,a){return e(n=>r.request(wt,t,s(s({},a),n)),"getVersion","query")},getChain(t,a){return e(n=>r.request(Mt,t,s(s({},a),n)),"getChain","query")},getTransaction(t,a){return e(n=>r.request(At,t,s(s({},a),n)),"getTransaction","query")},getTransactionWithReceipts(t,a){return e(n=>r.request(Qt,t,s(s({},a),n)),"getTransactionWithReceipts","query")},getTransactions(t,a){return e(n=>r.request(Dt,t,s(s({},a),n)),"getTransactions","query")},getTransactionsByOwner(t,a){return e(n=>r.request(Pt,t,s(s({},a),n)),"getTransactionsByOwner","query")},getBlock(t,a){return e(n=>r.request(Ot,t,s(s({},a),n)),"getBlock","query")},getBlockWithTransactions(t,a){return e(n=>r.request(Lt,t,s(s({},a),n)),"getBlockWithTransactions","query")},getBlocks(t,a){return e(n=>r.request($t,t,s(s({},a),n)),"getBlocks","query")},getCoin(t,a){return e(n=>r.request(Et,t,s(s({},a),n)),"getCoin","query")},getCoins(t,a){return e(n=>r.request(Ut,t,s(s({},a),n)),"getCoins","query")},getCoinsToSpend(t,a){return e(n=>r.request(Ft,t,s(s({},a),n)),"getCoinsToSpend","query")},getContract(t,a){return e(n=>r.request(Vt,t,s(s({},a),n)),"getContract","query")},getBalance(t,a){return e(n=>r.request(Nt,t,s(s({},a),n)),"getBalance","query")},getBalances(t,a){return e(n=>r.request(Wt,t,s(s({},a),n)),"getBalances","query")},dryRun(t,a){return e(n=>r.request(Ht,t,s(s({},a),n)),"dryRun","mutation")},submit(t,a){return e(n=>r.request(vt,t,s(s({},a),n)),"submit","mutation")},startSession(t,a){return e(n=>r.request(Kt,t,s(s({},a),n)),"startSession","mutation")},endSession(t,a){return e(n=>r.request(Zt,t,s(s({},a),n)),"endSession","mutation")},execute(t,a){return e(n=>r.request(zt,t,s(s({},a),n)),"execute","mutation")},reset(t,a){return e(n=>r.request(Jt,t,s(s({},a),n)),"reset","mutation")}}}var y=require("@ethersproject/bytes"),G=require("@fuel-ts/transactions"),St=require("graphql-request");var g=require("@ethersproject/bytes"),F=require("@fuel-ts/constants"),w=require("@fuel-ts/transactions"),tt=r=>{var e,t,a;switch(r.type){case w.InputType.Coin:{let n=(0,g.arrayify)((e=r.predicate)!=null?e:"0x"),o=(0,g.arrayify)((t=r.predicateData)!=null?t:"0x");return{type:w.InputType.Coin,utxoID:{transactionId:(0,g.hexlify)((0,g.arrayify)(r.id).slice(0,32)),outputIndex:(0,g.arrayify)(r.id)[32]},owner:(0,g.hexlify)(r.owner),amount:BigInt(r.amount),assetId:(0,g.hexlify)(r.assetId),witnessIndex:r.witnessIndex,maturity:BigInt((a=r.maturity)!=null?a:0),predicateLength:n.length,predicateDataLength:o.length,predicate:(0,g.hexlify)(n),predicateData:(0,g.hexlify)(o)}}case w.InputType.Contract:return{type:w.InputType.Contract,utxoID:{transactionId:F.ZeroBytes32,outputIndex:0},balanceRoot:F.ZeroBytes32,stateRoot:F.ZeroBytes32,contractID:(0,g.hexlify)(r.contractId)};default:throw new Error("Invalid Input type")}};var x=require("@ethersproject/bytes"),M=require("@fuel-ts/constants"),m=require("@fuel-ts/transactions"),et=r=>{switch(r.type){case m.OutputType.Coin:return{type:m.OutputType.Coin,to:(0,x.hexlify)(r.to),amount:BigInt(r.amount),assetId:(0,x.hexlify)(r.assetId)};case m.OutputType.Contract:return{type:m.OutputType.Contract,inputIndex:r.inputIndex,balanceRoot:M.ZeroBytes32,stateRoot:M.ZeroBytes32};case m.OutputType.Withdrawal:return{type:m.OutputType.Withdrawal,to:(0,x.hexlify)(r.to),amount:BigInt(r.amount),assetId:(0,x.hexlify)(r.assetId)};case m.OutputType.Change:return{type:m.OutputType.Change,to:(0,x.hexlify)(r.to),amount:BigInt(0),assetId:(0,x.hexlify)(r.assetId)};case m.OutputType.Variable:return{type:m.OutputType.Variable,to:M.ZeroBytes32,amount:BigInt(0),assetId:M.ZeroBytes32};case m.OutputType.ContractCreated:return{type:m.OutputType.ContractCreated,contractId:(0,x.hexlify)(r.contractId),stateRoot:(0,x.hexlify)(r.stateRoot)};default:throw new Error("Invalid Output type")}};var l=require("@ethersproject/bytes"),R=require("@fuel-ts/constants"),h=require("@fuel-ts/interfaces"),c=require("@fuel-ts/transactions");var A=require("@ethersproject/bytes"),Yt=r=>{let e=new Uint8Array(32);return e.set((0,A.arrayify)(r)),e},lt=r=>{let e,t;return Array.isArray(r)?(e=r[0],t=r[1]):(e=r.key,t=r.value),{key:(0,A.hexlify)(e),value:(0,A.hexlify)(Yt(t))}};var V=require("@ethersproject/bytes"),yt=r=>{let e=(0,V.arrayify)(r);return{data:(0,V.hexlify)(e),dataLength:e.length}};var at={bytes:(0,l.arrayify)("0x24000000"),encodeScriptData:()=>new Uint8Array(0)},N=class extends Error{constructor(){super(...arguments);this.name="ChangeOutputCollisionError";this.message='A ChangeOutput with the same "assetId" already exists for a different "to" address'}},W=class extends Error{constructor(t){super();this.index=t;this.name="NoWitnessAtIndexError";this.message=`Witness at index "${t}" was not found`}},H=class extends Error{constructor(t){super();this.owner=t;this.name="NoWitnessByOwnerError";this.message=`A witness for the given owner "${t}" was not found`}},v=class{constructor({gasPrice:e,gasLimit:t,bytePrice:a,maturity:n,inputs:o,outputs:i,witnesses:b}={}){this.inputs=[];this.outputs=[];this.witnesses=[];this.gasPrice=BigInt(e!=null?e:0),this.gasLimit=BigInt(t!=null?t:0),this.bytePrice=BigInt(a!=null?a:0),this.maturity=BigInt(n!=null?n:0),this.inputs=[...o!=null?o:[]],this.outputs=[...i!=null?i:[]],this.witnesses=[...b!=null?b:[]]}getBaseTransaction(){var n,o,i,b,C,f;let e=(o=(n=this.inputs)==null?void 0:n.map(tt))!=null?o:[],t=(b=(i=this.outputs)==null?void 0:i.map(et))!=null?b:[],a=(f=(C=this.witnesses)==null?void 0:C.map(yt))!=null?f:[];return{gasPrice:this.gasPrice,gasLimit:this.gasLimit,bytePrice:this.bytePrice,maturity:this.maturity,inputs:e,outputs:t,witnesses:a,inputsCount:e.length,outputsCount:t.length,witnessesCount:a.length}}toTransactionBytes(){return new c.TransactionCoder().encode(this.toTransaction())}pushInput(e){return this.inputs.push(e),this.inputs.length-1}pushOutput(e){return this.outputs.push(e),this.outputs.length-1}createWitness(){return this.witnesses.push("0x"),this.witnesses.length-1}updateWitness(e,t){if(!this.witnesses[e])throw new W(e);this.witnesses[e]=t}getCoinInputs(){return this.inputs.filter(e=>e.type===c.InputType.Coin)}getCoinOutputs(){return this.outputs.filter(e=>e.type===c.OutputType.Coin)}getChangeOutputs(){return this.outputs.filter(e=>e.type===c.OutputType.Change)}getCoinInputWitnessIndexByOwner(e){var a,n;let t=(0,h.addressify)(e);return(n=(a=this.inputs.find(o=>o.type===c.InputType.Coin&&(0,l.hexlify)(o.owner)===t))==null?void 0:a.witnessIndex)!=null?n:null}updateWitnessByCoinInputOwner(e,t){let a=this.getCoinInputWitnessIndexByOwner(e);if(!a)throw new H((0,h.addressify)(e));this.updateWitness(a,t)}addCoin(e){let t=this.getCoinInputWitnessIndexByOwner(e.owner);typeof t!="number"&&(t=this.createWitness()),this.pushInput(p(s({type:c.InputType.Coin},e),{witnessIndex:t}));let a=this.getChangeOutputs().find(n=>(0,l.hexlify)(n.assetId)===e.assetId);if(a&&(0,l.hexlify)(a.to)!==e.owner)throw new N;a||this.pushOutput({type:c.OutputType.Change,to:e.owner,assetId:e.assetId})}addCoins(e){e.forEach(t=>this.addCoin(t))}addCoinOutput(e,t,a=R.NativeAssetId){this.pushOutput({type:c.OutputType.Coin,to:(0,h.addressify)(e),amount:t,assetId:a})}addCoinOutputs(e,t){t.map(_).forEach(a=>{this.pushOutput({type:c.OutputType.Coin,to:(0,h.addressify)(e),amount:a.amount,assetId:a.assetId})})}calculateFee(){return 1n}},Q=class extends v{constructor(o={}){var i=o,{script:t,scriptData:a}=i,n=J(i,["script","scriptData"]);super(n);this.type=c.TransactionType.Script;this.script=(0,l.arrayify)(t!=null?t:at.bytes),this.scriptData=(0,l.arrayify)(a!=null?a:at.encodeScriptData())}static from(t){return t instanceof this?t:new this(t)}toTransaction(){var n,o;let t=(0,l.arrayify)((n=this.script)!=null?n:"0x"),a=(0,l.arrayify)((o=this.scriptData)!=null?o:"0x");return p(s({type:c.TransactionType.Script},super.getBaseTransaction()),{scriptLength:t.length,scriptDataLength:a.length,receiptsRoot:R.ZeroBytes32,script:(0,l.hexlify)(t),scriptData:(0,l.hexlify)(a)})}getContractInputs(){return this.inputs.filter(t=>t.type===c.InputType.Contract)}getContractOutputs(){return this.outputs.filter(t=>t.type===c.OutputType.Contract)}getVariableOutputs(){return this.outputs.filter(t=>t.type===c.OutputType.Variable)}setScript(t,a){this.script=t.bytes,this.scriptData=t.encodeScriptData(a)}addVariableOutputs(t=1){let a=t;for(;a;)this.pushOutput({type:c.OutputType.Variable}),a-=1;return this.outputs.length-1}addContract(t){let a=super.pushInput({type:c.InputType.Contract,contractId:(0,h.contractIdify)(t)});this.pushOutput({type:c.OutputType.Contract,inputIndex:a})}},D=class extends v{constructor(b={}){var C=b,{bytecodeWitnessIndex:t,salt:a,staticContracts:n,storageSlots:o}=C,i=J(C,["bytecodeWitnessIndex","salt","staticContracts","storageSlots"]);var f;super(i);this.type=c.TransactionType.Create;this.bytecodeWitnessIndex=t!=null?t:0,this.salt=(0,l.hexlify)(a!=null?a:R.ZeroBytes32),this.staticContracts=[...(f=n==null?void 0:n.map(bt=>(0,l.hexlify)(bt)))!=null?f:[]],this.storageSlots=[...o!=null?o:[]]}static from(t){return t instanceof this?t:new this(t)}toTransaction(){var i,b,C;let t=this.getBaseTransaction(),a=this.bytecodeWitnessIndex,n=(i=this.staticContracts)!=null?i:[],o=(C=(b=this.storageSlots)==null?void 0:b.map(lt))!=null?C:[];return p(s({type:c.TransactionType.Create},t),{bytecodeLength:t.witnesses[a].dataLength/4,bytecodeWitnessIndex:a,staticContractsCount:n.length,storageSlotsCount:o.length,salt:this.salt?(0,l.hexlify)(this.salt):R.ZeroBytes32,staticContracts:n.map(f=>(0,l.hexlify)(f)),storageSlots:o})}getContractCreatedOutputs(){return this.outputs.filter(t=>t.type===c.OutputType.ContractCreated)}addContractCreatedOutput(t,a){this.pushOutput({type:c.OutputType.ContractCreated,contractId:t,stateRoot:a})}},K=r=>{if(r instanceof Q||r instanceof D)return r;switch(r.type){case c.TransactionType.Script:return Q.from(r);case c.TransactionType.Create:return D.from(r);default:throw new Error(`Unknown transaction type: ${r.type}`)}};var mt=require("@ethersproject/bytes"),P=require("@fuel-ts/transactions"),dt=r=>{let e=new P.ReceiptCoder().decode((0,mt.arrayify)(r.rawPayload),0)[0];switch(e.type){case P.ReceiptType.ReturnData:return p(s({},e),{data:r.data});case P.ReceiptType.LogData:return p(s({},e),{data:r.data});default:return e}},Z,gt,O=class{constructor(e,t,a){st(this,Z);this.id=e,this.request=t,this.provider=a}async waitForResult(){var t;let e=await ot(this,Z,gt).call(this);switch((t=e.status)==null?void 0:t.type){case"SubmittedStatus":throw new Error("Not yet implemented");case"FailureStatus":return{status:{type:"failure",reason:e.status.reason},receipts:e.receipts.map(dt),transactionId:this.id,blockId:e.status.block.id,time:e.status.time};case"SuccessStatus":return{status:{type:"success",programState:e.status.programState},receipts:e.receipts.map(dt),transactionId:this.id,blockId:e.status.block.id,time:e.status.time};default:throw new Error("Invalid Transaction status")}}async wait(){let e=await this.waitForResult();if(e.status.type==="failure")throw new Error(`Transaction failed: ${e.status.reason}`);return e}};Z=new WeakSet,gt=async function(){let{transaction:e}=await this.provider.operations.getTransactionWithReceipts({transactionId:this.id});if(!e)throw new Error("No Transaction was received from the client.");return e};var jt=r=>{let e=new G.ReceiptCoder().decode((0,y.arrayify)(r.rawPayload),0)[0];switch(e.type){case G.ReceiptType.ReturnData:return p(s({},e),{data:r.data});case G.ReceiptType.LogData:return p(s({},e),{data:r.data});default:return e}},L=class{constructor(e){this.url=e;let t=new St.GraphQLClient(e);this.operations=pt(t)}async getVersion(){let{nodeInfo:{nodeVersion:e}}=await this.operations.getVersion();return e}async getNetwork(){return{name:"fuelv2",chainId:3735928559}}async getBlockNumber(){let{chain:e}=await this.operations.getChain();return BigInt(e.latestBlock.height)}async sendTransaction(e){let t=K(e),a=(0,y.hexlify)(t.toTransactionBytes()),{submit:{id:n}}=await this.operations.submit({encodedTransaction:a});return new O(n,t,this)}async call(e,{utxoValidation:t}={}){let a=K(e),n=(0,y.hexlify)(a.toTransactionBytes()),{dryRun:o}=await this.operations.dryRun({encodedTransaction:n,utxoValidation:t||!1});return{receipts:o.map(jt)}}async getCoins(e,t,a){return(await this.operations.getCoins(p(s({first:10},a),{filter:{owner:(0,y.hexlify)(e),assetId:t&&(0,y.hexlify)(t)}}))).coins.edges.map(i=>i.node).map(i=>({id:i.utxoId,assetId:i.assetId,amount:BigInt(i.amount),owner:i.owner,status:i.status,maturity:BigInt(i.maturity),blockCreated:BigInt(i.blockCreated)}))}async getCoinsToSpend(e,t,a){return(await this.operations.getCoinsToSpend({owner:(0,y.hexlify)(e),spendQuery:t.map(_).map(i=>({assetId:(0,y.hexlify)(i.assetId),amount:i.amount.toString()})),maxInputs:a})).coinsToSpend.map(i=>({id:i.utxoId,status:i.status,assetId:i.assetId,amount:BigInt(i.amount),owner:i.owner,maturity:BigInt(i.maturity),blockCreated:BigInt(i.blockCreated)}))}async getBlock(e){let t;typeof e=="number"?t={blockHeight:BigInt(e).toString()}:e==="latest"?t={blockHeight:(await this.getBlockNumber()).toString()}:t={blockId:e};let{block:a}=await this.operations.getBlock(t);return a?{id:a.id,height:BigInt(a.height),time:a.time,producer:a.producer,transactionIds:a.transactions.map(n=>n.id)}:null}async getBlockWithTransactions(e){let t;typeof e=="number"?t={blockHeight:BigInt(e).toString()}:e==="latest"?t={blockHeight:(await this.getBlockNumber()).toString()}:t={blockId:e};let{block:a}=await this.operations.getBlockWithTransactions(t);return a?{id:a.id,height:BigInt(a.height),time:a.time,producer:a.producer,transactionIds:a.transactions.map(n=>n.id),transactions:a.transactions.map(n=>{var o;return(o=new G.TransactionCoder().decode((0,y.arrayify)(n.rawPayload),0))==null?void 0:o[0]})}:null}async getTransaction(e){var a;let{transaction:t}=await this.operations.getTransaction({transactionId:e});return t?(a=new G.TransactionCoder().decode((0,y.arrayify)(t.rawPayload),0))==null?void 0:a[0]:null}async getContract(e){let{contract:t}=await this.operations.getContract({contractId:e});return t||null}async getBalance(e,t){let{balance:a}=await this.operations.getBalance({owner:(0,y.hexlify)(e),assetId:(0,y.hexlify)(t)});return BigInt(a.amount)}async getBalances(e,t){return(await this.operations.getBalances(p(s({first:10},t),{filter:{owner:(0,y.hexlify)(e)}}))).balances.edges.map(o=>o.node).map(o=>({assetId:o.assetId,amount:BigInt(o.amount)}))}};var It=require("@ethersproject/sha2"),T=require("@fuel-ts/constants"),q=require("@fuel-ts/transactions"),qt=r=>{let e=s({},r);switch(e.type){case q.TransactionType.Script:{e.receiptsRoot=T.ZeroBytes32;break}case q.TransactionType.Create:break;default:throw new Error("Not implemented")}return e.inputs=e.inputs.map(t=>t.type===q.InputType.Contract?p(s({},t),{utxoID:{transactionId:T.ZeroBytes32,outputIndex:0},balanceRoot:T.ZeroBytes32,stateRoot:T.ZeroBytes32}):t),e.outputs=e.outputs.map(t=>{switch(t.type){case q.OutputType.Contract:return p(s({},t),{balanceRoot:T.ZeroBytes32,stateRoot:T.ZeroBytes32});case q.OutputType.Change:return p(s({},t),{amount:0n});case q.OutputType.Variable:return p(s({},t),{to:T.ZeroBytes32,amount:0n,assetId:T.ZeroBytes32});default:return t}}),e},te=r=>{let e=qt(r),t=new q.TransactionCoder().encode(e);return(0,It.sha256)(t)};0&&(module.exports={ChangeOutputCollisionError,CoinStatus,CreateTransactionRequest,NoWitnessAtIndexError,NoWitnessByOwnerError,Provider,ScriptTransactionRequest,TransactionResponse,TransactionType,coinQuantityfy,getSignableTransaction,getTransactionId,inputify,outputify,returnZeroScript,transactionRequestify});
//# sourceMappingURL=index.js.map